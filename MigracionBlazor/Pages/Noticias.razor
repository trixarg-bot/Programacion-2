@page "/noticias"
@using System.Net.Http.Json
@inject HttpClient Http

<div class="min-h-screen bg-gray-100 py-6 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto">
        <h1 class="text-3xl font-bold">Noticias de Migración</h1>
        <p class="text-gray-600">Últimas noticias y actualizaciones sobre temas migratorios</p>

        @if (isLoading)
        {
            <div class="flex justify-center items-center py-12">
                <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600"></div>
            </div>
        }
        else if (!string.IsNullOrEmpty(error))
        {
            <div class="bg-red-50 border border-red-200 rounded-md p-4 text-red-600">
                @error
            </div>
        }
        else if (noticias != null && noticias.Any())
        {
            @foreach (var noticia in noticias)
            {
                <article class="news-card">
                    <h2 class="news-title">@noticia.Titulo</h2>
                    <p class="news-content">@noticia.Resumen</p>
                    <div class="publication-date">
                        Publicado: @noticia.FechaPublicacion
                    </div>
                </article>
            }
        }
        else
        {
            <div class="text-center py-12 text-gray-500">
                No se encontraron noticias disponibles
            </div>
        }
    </div>
    <div class="mt-6 text-center">
        <button @onclick="CargarNoticias" disabled="@isLoading" class="btn-primary">
            @if (isLoading)
            {
                <span class="mr-2">
                    <div class="animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full"></div>
                </span>
                <span>Cargando...</span>
            }
            else
            {
                <span class="mr-2">↻</span>
                <span>Actualizar noticias</span>
            }
        </button>
    </div>
</div>



            

@code {
    private List<NoticiaDto> noticias = new();
    private bool isLoading = false;
    private string error;

    protected override async Task OnInitializedAsync()
    {
        await CargarNoticias();
    }

    private async Task CargarNoticias()
    {
        try
        {
            isLoading = true;
            error = null;

            var response = await Http.GetAsync("api/Noticias");
            
            if (response.IsSuccessStatusCode)
            {
                noticias = await response.Content.ReadFromJsonAsync<List<NoticiaDto>>() ?? new();
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                error = "Error al cargar las noticias";
                Console.WriteLine($"Error response: {errorContent}");
            }
        }
        catch (Exception ex)
        {
            error = "Error al cargar las noticias";
            Console.WriteLine($"Exception: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private class NoticiaDto
    {
        public string Titulo { get; set; }
        public string Resumen { get; set; }
        public string FechaPublicacion { get; set; }
    }
}