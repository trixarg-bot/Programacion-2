@page "/estado-clima"
@using System.Net.Http.Json
@using System.Globalization
@using System.Text.Json
@inject HttpClient Http

<div class="min-h-screen bg-gray-100 py-6 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto">
        <div class="bg-white shadow-lg rounded-lg overflow-hidden">
            <!-- Encabezado -->
            <div class="px-6 py-4 bg-indigo-600">
                <h2 class="text-2xl font-bold text-white">Estado del Clima</h2>
            </div>

            <!-- Formulario de búsqueda -->
            <div class="px-6 py-4 border-b">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Latitud</label>
                        <input type="number" step="0.0001" 
                               @bind="latitud" 
                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                               placeholder="18.4861" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Longitud</label>
                        <input type="number" step="0.0001" 
                               @bind="longitud"
                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
                               placeholder="-69.9312" />
                    </div>
                    <div class="flex items-end">
                        <button @onclick="ObtenerClima" 
                                class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">
                            Consultar Clima
                        </button>
                    </div>
                </div>
            </div>

            <!-- Presets de ubicaciones -->
            <div class="px-6 py-4 bg-gray-50">
                <h3 class="text-sm font-medium text-gray-700 mb-2">Ubicaciones predefinidas:</h3>
                <div class="flex flex-wrap gap-2">
                    <button @onclick="() => SeleccionarUbicacion(18.4861, -69.9312)" 
                            class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800">
                        Santo Domingo
                    </button>
                    <button @onclick="() => SeleccionarUbicacion(19.4517, -70.6970)" 
                            class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800">
                        Santiago
                    </button>
                    <button @onclick="() => SeleccionarUbicacion(19.3007, -70.2528)" 
                            class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800">
                        San Francisco de Macorís
                    </button>
                </div>
            </div>

            @if (isLoading)
            {
                <div class="px-6 py-12 text-center">
                    <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"></div>
                    <p class="mt-2 text-gray-600">Cargando información del clima...</p>
                </div>
            }
            else if (error != null)
            {
                <div class="px-6 py-4 bg-red-50 text-red-600">
                    @error
                </div>
            }
            else if (clima != null)
            {
                <div class="px-6 py-8">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <!-- Temperatura -->
                        <div class="bg-white p-6 rounded-lg shadow-sm border">
                            <h3 class="text-lg font-medium text-gray-900 mb-2">Temperatura</h3>
                            <p class="text-3xl font-bold text-indigo-600">@clima.Temperatura°C</p>
                            <p class="text-sm text-gray-500 mt-1">@clima.Descripcion</p>
                        </div>

                        <!-- Ubicación -->
                        <div class="bg-white p-6 rounded-lg shadow-sm border">
                            <h3 class="text-lg font-medium text-gray-900 mb-2">Ubicación</h3>
                            <p class="text-xl font-semibold">@clima.Ciudad</p>
                            <p class="text-sm text-gray-500 mt-1">
                                Lat: @latitud, Lon: @longitud
                            </p>
                        </div>

                        <!-- Detalles adicionales -->
                        <div class="bg-white p-6 rounded-lg shadow-sm border">
                            <h3 class="text-lg font-medium text-gray-900 mb-2">Detalles</h3>
                            <div class="space-y-2">
                                <p class="text-sm text-gray-600">
                                    Humedad: @clima.Humedad%
                                </p>
                                <p class="text-sm text-gray-600">
                                    Viento: @clima.VelocidadViento km/h
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private double latitud = 18.4861;
    private double longitud = -69.9312;
    private ClimaResponse? clima;
    private string? error;
    private bool isLoading;

    private async Task ObtenerClima()
    {
        try
        {
            isLoading = true;
            error = null;

            // Validar coordenadas
            if (latitud < 17.5 || latitud > 19.9 || longitud < -72.0 || longitud > -68.3)
            {
                error = "Las coordenadas están fuera del territorio de la República Dominicana";
                return;
            }

            // Formatear los números usando invariant culture para asegurar el formato correcto
            var latitudStr = latitud.ToString(CultureInfo.InvariantCulture);
            var longitudStr = longitud.ToString(CultureInfo.InvariantCulture);

            var url = $"api/Clima?latitud={latitudStr}&longitud={longitudStr}";
            Console.WriteLine($"Llamando a URL: {url}"); // Para debugging

            try
            {
                var response = await Http.GetAsync(url);
                if (response.IsSuccessStatusCode)
                {
                    clima = await response.Content.ReadFromJsonAsync<ClimaResponse>();
                }
                else
                {
                    var errorContent = await response.Content.ReadAsStringAsync();
                    error = $"Error del servidor: {errorContent}";
                    Console.WriteLine($"Error response: {errorContent}");
                }
            }
            catch (Exception ex)
            {
                error = "Error al procesar la respuesta del servidor";
                Console.WriteLine($"Exception en llamada HTTP: {ex}");
            }
        }
        catch (Exception ex)
        {
            error = "Error al obtener la información del clima";
            Console.WriteLine($"Error general: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void SeleccionarUbicacion(double lat, double lon)
    {
        latitud = lat;
        longitud = lon;
        ObtenerClima();
    }

    protected override async Task OnInitializedAsync()
    {
        await ObtenerClima();
    }

    public class ClimaResponse
    {
        public double Temperatura { get; set; }
        public double TemperaturaMinima { get; set; }
        public double TemperaturaMaxima { get; set; }
        public int Humedad { get; set; }
        public string Descripcion { get; set; }
        public string Ciudad { get; set; }
        public int Presion { get; set; }
        public double VelocidadViento { get; set; }
    }
}